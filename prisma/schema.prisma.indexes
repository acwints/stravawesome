// Recommended indexes for performance optimization
// Add these to your schema.prisma file

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId]) // ADD THIS - frequently queried by userId
  @@index([provider, userId]) // ADD THIS - for finding specific provider accounts
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId]) // ADD THIS - frequently queried by userId
  @@index([expires]) // ADD THIS - for cleanup of expired sessions
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  goals         Goal[]
  sessions      Session[]

  // email is already unique, so it has an index
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@index([expires]) // ADD THIS - for cleanup of expired tokens
}

model Goal {
  id             String   @id @default(cuid())
  userId         String
  year           Int
  activityType   String
  targetDistance Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, year, activityType])
  @@index([userId, year]) // ADD THIS - frequently queried together
}
